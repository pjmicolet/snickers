cmake_minimum_required(VERSION 3.16)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wshadow -Wpedantic -Wconversion -Werror" )
project(Test)
#set(CMAKE_CXX_CLANG_TIDY "clang-tidy;-checks=*;-header-filter=.;")
set(CMAKE_CXX_STANDARD 20)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -g")


find_package(SDL2 REQUIRED)
include_directories(cores, utils, tests, components, assemblers)
include_directories(utils ${SDL2_INCLUDE_DIRS})
file(GLOB SOURCES "tests/test_*.cpp" "cores/snes/*.cpp" "utils/*.cpp" "cores/nes/*.cpp" "utils/assemblers/*.cpp" "components/*.cpp" "utils/render/sdl2/*.cpp")
add_executable(tests ${SOURCES})
target_link_libraries(tests PUBLIC ${SDL2_LIBRARIES})

project(Cli)
set(CMAKE_CXX_STANDARD 20)

set(CMAKE_CXX_FLAGS "" )
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -g")
find_package(SDL2 REQUIRED)
include_directories(cores, utils, cli, components, assemblers)
file(GLOB SOURCES "cli/*.cpp" "cores/snes/*.cpp" "utils/*.cpp" "cores/nes/*.cpp" "utils/assemblers/*.cpp" "components/*.cpp" "utils/render/sdl2/*.cpp")
add_executable(cli ${SOURCES})
target_link_libraries(cli PUBLIC ncurses)
target_link_libraries(cli PUBLIC ${SDL2_LIBRARIES})

project(render)
find_package(SDL2 REQUIRED)
set(CMAKE_CXX_FLAGS "" )
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -g -O3")
include_directories(utils ${SDL2_INCLUDE_DIRS})
file(GLOB SOURCES "tests/render_app.cpp" "utils/render/sdl2/*.cpp")
add_executable(render ${SOURCES})
target_link_libraries(render PUBLIC ${SDL2_LIBRARIES})

project(nes)
find_package(SDL2 REQUIRED)
set(CMAKE_CXX_FLAGS "" )
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -g")
include_directories(cores, utils, tests, components)
include_directories(utils ${SDL2_INCLUDE_DIRS})
file(GLOB SOURCES "core_bins/nes.cpp" "cores/snes/*.cpp" "utils/*.cpp" "cores/nes/*.cpp" "utils/assemblers/*.cpp" "components/*.cpp" "utils/render/sdl2/*.cpp")
add_executable(nes ${SOURCES})
target_link_libraries(nes PUBLIC ${SDL2_LIBRARIES})
